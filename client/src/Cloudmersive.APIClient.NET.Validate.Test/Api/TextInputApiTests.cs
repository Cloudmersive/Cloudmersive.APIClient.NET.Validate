/* 
 * validateapi
 *
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Cloudmersive.APIClient.NET.Validate.Client;
using Cloudmersive.APIClient.NET.Validate.Api;
using Cloudmersive.APIClient.NET.Validate.Model;

namespace Cloudmersive.APIClient.NET.Validate.Test
{
    /// <summary>
    ///  Class for testing TextInputApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TextInputApiTests
    {
        private TextInputApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TextInputApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TextInputApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TextInputApi
            //Assert.IsInstanceOfType(typeof(TextInputApi), instance, "instance is a TextInputApi");
        }

        
        /// <summary>
        /// Test TextInputCheckHtmlSsrf
        /// </summary>
        [Test]
        public void TextInputCheckHtmlSsrfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //bool? allowCidScheme = null;
            //var response = instance.TextInputCheckHtmlSsrf(value, allowCidScheme);
            //Assert.IsInstanceOf<HtmlSsrfDetectionResult> (response, "response is HtmlSsrfDetectionResult");
        }
        
        /// <summary>
        /// Test TextInputCheckSqlInjection
        /// </summary>
        [Test]
        public void TextInputCheckSqlInjectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //string detectionLevel = null;
            //var response = instance.TextInputCheckSqlInjection(value, detectionLevel);
            //Assert.IsInstanceOf<SqlInjectionDetectionResult> (response, "response is SqlInjectionDetectionResult");
        }
        
        /// <summary>
        /// Test TextInputCheckSqlInjectionBatch
        /// </summary>
        [Test]
        public void TextInputCheckSqlInjectionBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SqlInjectionCheckBatchRequest value = null;
            //var response = instance.TextInputCheckSqlInjectionBatch(value);
            //Assert.IsInstanceOf<SqlInjectionCheckBatchResponse> (response, "response is SqlInjectionCheckBatchResponse");
        }
        
        /// <summary>
        /// Test TextInputCheckXss
        /// </summary>
        [Test]
        public void TextInputCheckXssTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //var response = instance.TextInputCheckXss(value);
            //Assert.IsInstanceOf<XssProtectionResult> (response, "response is XssProtectionResult");
        }
        
        /// <summary>
        /// Test TextInputCheckXssBatch
        /// </summary>
        [Test]
        public void TextInputCheckXssBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //XssProtectionBatchRequest value = null;
            //var response = instance.TextInputCheckXssBatch(value);
            //Assert.IsInstanceOf<XssProtectionBatchResponse> (response, "response is XssProtectionBatchResponse");
        }
        
        /// <summary>
        /// Test TextInputCheckXxe
        /// </summary>
        [Test]
        public void TextInputCheckXxeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //bool? allowInternetUrls = null;
            //string knownSafeUrls = null;
            //string knownUnsafeUrls = null;
            //var response = instance.TextInputCheckXxe(value, allowInternetUrls, knownSafeUrls, knownUnsafeUrls);
            //Assert.IsInstanceOf<XxeDetectionResult> (response, "response is XxeDetectionResult");
        }
        
        /// <summary>
        /// Test TextInputCheckXxeBatch
        /// </summary>
        [Test]
        public void TextInputCheckXxeBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //XxeDetectionBatchRequest request = null;
            //var response = instance.TextInputCheckXxeBatch(request);
            //Assert.IsInstanceOf<XxeDetectionBatchResponse> (response, "response is XxeDetectionBatchResponse");
        }
        
        /// <summary>
        /// Test TextInputProtectXss
        /// </summary>
        [Test]
        public void TextInputProtectXssTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string value = null;
            //var response = instance.TextInputProtectXss(value);
            //Assert.IsInstanceOf<XssProtectionResult> (response, "response is XssProtectionResult");
        }
        
    }

}
