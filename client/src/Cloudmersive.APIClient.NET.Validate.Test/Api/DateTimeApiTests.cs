/* 
 * validateapi
 *
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Cloudmersive.APIClient.NET.Validate.Client;
using Cloudmersive.APIClient.NET.Validate.Api;
using Cloudmersive.APIClient.NET.Validate.Model;

namespace Cloudmersive.APIClient.NET.Validate.Test
{
    /// <summary>
    ///  Class for testing DateTimeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DateTimeApiTests
    {
        private DateTimeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DateTimeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DateTimeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DateTimeApi
            //Assert.IsInstanceOfType(typeof(DateTimeApi), instance, "instance is a DateTimeApi");
        }

        
        /// <summary>
        /// Test DateTimeGetNowSimple
        /// </summary>
        [Test]
        public void DateTimeGetNowSimpleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DateTimeGetNowSimple();
            //Assert.IsInstanceOf<DateTimeNowResult> (response, "response is DateTimeNowResult");
        }
        
        /// <summary>
        /// Test DateTimeGetPublicHolidays
        /// </summary>
        [Test]
        public void DateTimeGetPublicHolidaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetPublicHolidaysRequest input = null;
            //var response = instance.DateTimeGetPublicHolidays(input);
            //Assert.IsInstanceOf<PublicHolidaysResponse> (response, "response is PublicHolidaysResponse");
        }
        
        /// <summary>
        /// Test DateTimeParseNaturalLanguageDateTime
        /// </summary>
        [Test]
        public void DateTimeParseNaturalLanguageDateTimeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTimeNaturalLanguageParseRequest input = null;
            //var response = instance.DateTimeParseNaturalLanguageDateTime(input);
            //Assert.IsInstanceOf<DateTimeStandardizedParseResponse> (response, "response is DateTimeStandardizedParseResponse");
        }
        
        /// <summary>
        /// Test DateTimeParseStandardDateTime
        /// </summary>
        [Test]
        public void DateTimeParseStandardDateTimeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTimeStandardizedParseRequest input = null;
            //var response = instance.DateTimeParseStandardDateTime(input);
            //Assert.IsInstanceOf<DateTimeStandardizedParseResponse> (response, "response is DateTimeStandardizedParseResponse");
        }
        
    }

}
